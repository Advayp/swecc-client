interface FormComponentProps {
  nextStep: () => void
  prevStep: () => void
}

interface FormStartProps {
  nextStep: () => void
}

interface FormStepProps {
  nextStep: () => void
  prevStep: () => void
}

interface FormEndProps {
  prevStep: () => void
}

interface UserData {
  first_name: string
  last_name: string
  email: string
  discord: string
  grad_year: number
  major: string
  user_id: string
}

interface SignupData {
  user_id: string
  availability: boolean[][]
}

/**
 *
 * create table
  public.signups (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    first_name character varying not null,
    email character varying not null,
    discord character varying not null,
    form_id bigint not null,
    availability json not null,
    last_name character varying not null,
    constraint signups_pkey primary key (email, id, form_id),
    constraint signups_discord_key unique (discord),
    constraint signups_email_key unique (email),
    constraint public_signups_form_id_fkey foreign key (form_id) references forms (id)
  ) tablespace pg_default;
 *
    */

interface SignupRecord {
  user_id: string
  form_id: number
  availability: string
}

export type {
  FormComponentProps,
  SignupData,
  SignupRecord,
  FormStartProps,
  FormStepProps,
  FormEndProps,
  UserData
}
