interface FormComponentProps {
    nextStep: () => void;
    prevStep: () => void;
}

interface DateRange {
    startDate: Date;
    endDate: Date;
}

interface SignupData {
    firstName: string;
    lastName: string;
    email: string;
    discord: string;
    availability: boolean[][];
    startDate: Date;
}

/**
 *
 * create table
  public.signups (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    first_name character varying not null,
    email character varying not null,
    discord character varying not null,
    form_id bigint not null,
    availability json not null,
    last_name character varying not null,
    constraint signups_pkey primary key (email, id, form_id),
    constraint signups_discord_key unique (discord),
    constraint signups_email_key unique (email),
    constraint public_signups_form_id_fkey foreign key (form_id) references forms (id)
  ) tablespace pg_default;
 *
    */

interface SignupRecord {
    // id: number;
    // created_at: string;
    first_name: string;
    email: string;
    discord: string;
    form_id: number;
    availability: string;
    last_name: string;
}

export type { FormComponentProps, DateRange, SignupData, SignupRecord };